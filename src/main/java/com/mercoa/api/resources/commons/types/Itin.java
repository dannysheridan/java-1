/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.commons.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Itin.Builder.class)
public final class Itin {
    private final Optional<String> full;

    private final String lastFour;

    private Itin(Optional<String> full, String lastFour) {
        this.full = full;
        this.lastFour = lastFour;
    }

    @JsonProperty("full")
    public Optional<String> getFull() {
        return full;
    }

    @JsonProperty("lastFour")
    public String getLastFour() {
        return lastFour;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Itin && equalTo((Itin) other);
    }

    private boolean equalTo(Itin other) {
        return full.equals(other.full) && lastFour.equals(other.lastFour);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.full, this.lastFour);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static LastFourStage builder() {
        return new Builder();
    }

    public interface LastFourStage {
        _FinalStage lastFour(String lastFour);

        Builder from(Itin other);
    }

    public interface _FinalStage {
        Itin build();

        _FinalStage full(Optional<String> full);

        _FinalStage full(String full);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements LastFourStage, _FinalStage {
        private String lastFour;

        private Optional<String> full = Optional.empty();

        private Builder() {}

        @Override
        public Builder from(Itin other) {
            full(other.getFull());
            lastFour(other.getLastFour());
            return this;
        }

        @Override
        @JsonSetter("lastFour")
        public _FinalStage lastFour(String lastFour) {
            this.lastFour = lastFour;
            return this;
        }

        @Override
        public _FinalStage full(String full) {
            this.full = Optional.of(full);
            return this;
        }

        @Override
        @JsonSetter(value = "full", nulls = Nulls.SKIP)
        public _FinalStage full(Optional<String> full) {
            this.full = full;
            return this;
        }

        @Override
        public Itin build() {
            return new Itin(full, lastFour);
        }
    }
}
