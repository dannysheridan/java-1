/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import com.mercoa.api.resources.paymentmethodtypes.types.CurrencyCode;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = InvoiceMetricsResponse.Builder.class)
public final class InvoiceMetricsResponse {
    private final double totalAmount;

    private final int totalCount;

    private final double averageAmount;

    private final CurrencyCode currency;

    private InvoiceMetricsResponse(double totalAmount, int totalCount, double averageAmount, CurrencyCode currency) {
        this.totalAmount = totalAmount;
        this.totalCount = totalCount;
        this.averageAmount = averageAmount;
        this.currency = currency;
    }

    @JsonProperty("totalAmount")
    public double getTotalAmount() {
        return totalAmount;
    }

    @JsonProperty("totalCount")
    public int getTotalCount() {
        return totalCount;
    }

    @JsonProperty("averageAmount")
    public double getAverageAmount() {
        return averageAmount;
    }

    @JsonProperty("currency")
    public CurrencyCode getCurrency() {
        return currency;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InvoiceMetricsResponse && equalTo((InvoiceMetricsResponse) other);
    }

    private boolean equalTo(InvoiceMetricsResponse other) {
        return totalAmount == other.totalAmount
                && totalCount == other.totalCount
                && averageAmount == other.averageAmount
                && currency.equals(other.currency);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.totalAmount, this.totalCount, this.averageAmount, this.currency);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TotalAmountStage builder() {
        return new Builder();
    }

    public interface TotalAmountStage {
        TotalCountStage totalAmount(double totalAmount);

        Builder from(InvoiceMetricsResponse other);
    }

    public interface TotalCountStage {
        AverageAmountStage totalCount(int totalCount);
    }

    public interface AverageAmountStage {
        CurrencyStage averageAmount(double averageAmount);
    }

    public interface CurrencyStage {
        _FinalStage currency(CurrencyCode currency);
    }

    public interface _FinalStage {
        InvoiceMetricsResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements TotalAmountStage, TotalCountStage, AverageAmountStage, CurrencyStage, _FinalStage {
        private double totalAmount;

        private int totalCount;

        private double averageAmount;

        private CurrencyCode currency;

        private Builder() {}

        @Override
        public Builder from(InvoiceMetricsResponse other) {
            totalAmount(other.getTotalAmount());
            totalCount(other.getTotalCount());
            averageAmount(other.getAverageAmount());
            currency(other.getCurrency());
            return this;
        }

        @Override
        @JsonSetter("totalAmount")
        public TotalCountStage totalAmount(double totalAmount) {
            this.totalAmount = totalAmount;
            return this;
        }

        @Override
        @JsonSetter("totalCount")
        public AverageAmountStage totalCount(int totalCount) {
            this.totalCount = totalCount;
            return this;
        }

        @Override
        @JsonSetter("averageAmount")
        public CurrencyStage averageAmount(double averageAmount) {
            this.averageAmount = averageAmount;
            return this;
        }

        @Override
        @JsonSetter("currency")
        public _FinalStage currency(CurrencyCode currency) {
            this.currency = currency;
            return this;
        }

        @Override
        public InvoiceMetricsResponse build() {
            return new InvoiceMetricsResponse(totalAmount, totalCount, averageAmount, currency);
        }
    }
}
