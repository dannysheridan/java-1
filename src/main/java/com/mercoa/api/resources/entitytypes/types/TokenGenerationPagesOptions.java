/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitytypes.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = TokenGenerationPagesOptions.Builder.class)
public final class TokenGenerationPagesOptions {
    private final Optional<Boolean> paymentMethods;

    private final Optional<Boolean> representatives;

    private final Optional<Boolean> notifications;

    private TokenGenerationPagesOptions(
            Optional<Boolean> paymentMethods, Optional<Boolean> representatives, Optional<Boolean> notifications) {
        this.paymentMethods = paymentMethods;
        this.representatives = representatives;
        this.notifications = notifications;
    }

    @JsonProperty("paymentMethods")
    public Optional<Boolean> getPaymentMethods() {
        return paymentMethods;
    }

    @JsonProperty("representatives")
    public Optional<Boolean> getRepresentatives() {
        return representatives;
    }

    @JsonProperty("notifications")
    public Optional<Boolean> getNotifications() {
        return notifications;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TokenGenerationPagesOptions && equalTo((TokenGenerationPagesOptions) other);
    }

    private boolean equalTo(TokenGenerationPagesOptions other) {
        return paymentMethods.equals(other.paymentMethods)
                && representatives.equals(other.representatives)
                && notifications.equals(other.notifications);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.paymentMethods, this.representatives, this.notifications);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> paymentMethods = Optional.empty();

        private Optional<Boolean> representatives = Optional.empty();

        private Optional<Boolean> notifications = Optional.empty();

        private Builder() {}

        public Builder from(TokenGenerationPagesOptions other) {
            paymentMethods(other.getPaymentMethods());
            representatives(other.getRepresentatives());
            notifications(other.getNotifications());
            return this;
        }

        @JsonSetter(value = "paymentMethods", nulls = Nulls.SKIP)
        public Builder paymentMethods(Optional<Boolean> paymentMethods) {
            this.paymentMethods = paymentMethods;
            return this;
        }

        public Builder paymentMethods(Boolean paymentMethods) {
            this.paymentMethods = Optional.of(paymentMethods);
            return this;
        }

        @JsonSetter(value = "representatives", nulls = Nulls.SKIP)
        public Builder representatives(Optional<Boolean> representatives) {
            this.representatives = representatives;
            return this;
        }

        public Builder representatives(Boolean representatives) {
            this.representatives = Optional.of(representatives);
            return this;
        }

        @JsonSetter(value = "notifications", nulls = Nulls.SKIP)
        public Builder notifications(Optional<Boolean> notifications) {
            this.notifications = notifications;
            return this;
        }

        public Builder notifications(Boolean notifications) {
            this.notifications = Optional.of(notifications);
            return this;
        }

        public TokenGenerationPagesOptions build() {
            return new TokenGenerationPagesOptions(paymentMethods, representatives, notifications);
        }
    }
}
