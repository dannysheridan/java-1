/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.organizationtypes.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = OnboardingOptionsResponse.Builder.class)
public final class OnboardingOptionsResponse {
    private final boolean enableBusiness;

    private final boolean enableIndividual;

    private final BusinessOnboardingOptions business;

    private final IndividualOnboardingOptions individual;

    private OnboardingOptionsResponse(
            boolean enableBusiness,
            boolean enableIndividual,
            BusinessOnboardingOptions business,
            IndividualOnboardingOptions individual) {
        this.enableBusiness = enableBusiness;
        this.enableIndividual = enableIndividual;
        this.business = business;
        this.individual = individual;
    }

    @JsonProperty("enableBusiness")
    public boolean getEnableBusiness() {
        return enableBusiness;
    }

    @JsonProperty("enableIndividual")
    public boolean getEnableIndividual() {
        return enableIndividual;
    }

    @JsonProperty("business")
    public BusinessOnboardingOptions getBusiness() {
        return business;
    }

    @JsonProperty("individual")
    public IndividualOnboardingOptions getIndividual() {
        return individual;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof OnboardingOptionsResponse && equalTo((OnboardingOptionsResponse) other);
    }

    private boolean equalTo(OnboardingOptionsResponse other) {
        return enableBusiness == other.enableBusiness
                && enableIndividual == other.enableIndividual
                && business.equals(other.business)
                && individual.equals(other.individual);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.enableBusiness, this.enableIndividual, this.business, this.individual);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EnableBusinessStage builder() {
        return new Builder();
    }

    public interface EnableBusinessStage {
        EnableIndividualStage enableBusiness(boolean enableBusiness);

        Builder from(OnboardingOptionsResponse other);
    }

    public interface EnableIndividualStage {
        BusinessStage enableIndividual(boolean enableIndividual);
    }

    public interface BusinessStage {
        IndividualStage business(BusinessOnboardingOptions business);
    }

    public interface IndividualStage {
        _FinalStage individual(IndividualOnboardingOptions individual);
    }

    public interface _FinalStage {
        OnboardingOptionsResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements EnableBusinessStage, EnableIndividualStage, BusinessStage, IndividualStage, _FinalStage {
        private boolean enableBusiness;

        private boolean enableIndividual;

        private BusinessOnboardingOptions business;

        private IndividualOnboardingOptions individual;

        private Builder() {}

        @Override
        public Builder from(OnboardingOptionsResponse other) {
            enableBusiness(other.getEnableBusiness());
            enableIndividual(other.getEnableIndividual());
            business(other.getBusiness());
            individual(other.getIndividual());
            return this;
        }

        @Override
        @JsonSetter("enableBusiness")
        public EnableIndividualStage enableBusiness(boolean enableBusiness) {
            this.enableBusiness = enableBusiness;
            return this;
        }

        @Override
        @JsonSetter("enableIndividual")
        public BusinessStage enableIndividual(boolean enableIndividual) {
            this.enableIndividual = enableIndividual;
            return this;
        }

        @Override
        @JsonSetter("business")
        public IndividualStage business(BusinessOnboardingOptions business) {
            this.business = business;
            return this;
        }

        @Override
        @JsonSetter("individual")
        public _FinalStage individual(IndividualOnboardingOptions individual) {
            this.individual = individual;
            return this;
        }

        @Override
        public OnboardingOptionsResponse build() {
            return new OnboardingOptionsResponse(enableBusiness, enableIndividual, business, individual);
        }
    }
}
