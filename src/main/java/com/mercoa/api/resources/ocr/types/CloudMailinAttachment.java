/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.ocr.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CloudMailinAttachment.Builder.class)
public final class CloudMailinAttachment {
    private final Optional<String> content;

    private final Optional<String> url;

    private final String fileName;

    private final String contentType;

    private final Object size;

    private final Object disposition;

    private final Object contentId;

    private CloudMailinAttachment(
            Optional<String> content,
            Optional<String> url,
            String fileName,
            String contentType,
            Object size,
            Object disposition,
            Object contentId) {
        this.content = content;
        this.url = url;
        this.fileName = fileName;
        this.contentType = contentType;
        this.size = size;
        this.disposition = disposition;
        this.contentId = contentId;
    }

    @JsonProperty("content")
    public Optional<String> getContent() {
        return content;
    }

    @JsonProperty("url")
    public Optional<String> getUrl() {
        return url;
    }

    @JsonProperty("file_name")
    public String getFileName() {
        return fileName;
    }

    @JsonProperty("content_type")
    public String getContentType() {
        return contentType;
    }

    @JsonProperty("size")
    public Object getSize() {
        return size;
    }

    @JsonProperty("disposition")
    public Object getDisposition() {
        return disposition;
    }

    @JsonProperty("content_id")
    public Object getContentId() {
        return contentId;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CloudMailinAttachment && equalTo((CloudMailinAttachment) other);
    }

    private boolean equalTo(CloudMailinAttachment other) {
        return content.equals(other.content)
                && url.equals(other.url)
                && fileName.equals(other.fileName)
                && contentType.equals(other.contentType)
                && size.equals(other.size)
                && disposition.equals(other.disposition)
                && contentId.equals(other.contentId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                this.content, this.url, this.fileName, this.contentType, this.size, this.disposition, this.contentId);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static FileNameStage builder() {
        return new Builder();
    }

    public interface FileNameStage {
        ContentTypeStage fileName(String fileName);

        Builder from(CloudMailinAttachment other);
    }

    public interface ContentTypeStage {
        SizeStage contentType(String contentType);
    }

    public interface SizeStage {
        DispositionStage size(Object size);
    }

    public interface DispositionStage {
        ContentIdStage disposition(Object disposition);
    }

    public interface ContentIdStage {
        _FinalStage contentId(Object contentId);
    }

    public interface _FinalStage {
        CloudMailinAttachment build();

        _FinalStage content(Optional<String> content);

        _FinalStage content(String content);

        _FinalStage url(Optional<String> url);

        _FinalStage url(String url);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements FileNameStage, ContentTypeStage, SizeStage, DispositionStage, ContentIdStage, _FinalStage {
        private String fileName;

        private String contentType;

        private Object size;

        private Object disposition;

        private Object contentId;

        private Optional<String> url = Optional.empty();

        private Optional<String> content = Optional.empty();

        private Builder() {}

        @Override
        public Builder from(CloudMailinAttachment other) {
            content(other.getContent());
            url(other.getUrl());
            fileName(other.getFileName());
            contentType(other.getContentType());
            size(other.getSize());
            disposition(other.getDisposition());
            contentId(other.getContentId());
            return this;
        }

        @Override
        @JsonSetter("file_name")
        public ContentTypeStage fileName(String fileName) {
            this.fileName = fileName;
            return this;
        }

        @Override
        @JsonSetter("content_type")
        public SizeStage contentType(String contentType) {
            this.contentType = contentType;
            return this;
        }

        @Override
        @JsonSetter("size")
        public DispositionStage size(Object size) {
            this.size = size;
            return this;
        }

        @Override
        @JsonSetter("disposition")
        public ContentIdStage disposition(Object disposition) {
            this.disposition = disposition;
            return this;
        }

        @Override
        @JsonSetter("content_id")
        public _FinalStage contentId(Object contentId) {
            this.contentId = contentId;
            return this;
        }

        @Override
        public _FinalStage url(String url) {
            this.url = Optional.of(url);
            return this;
        }

        @Override
        @JsonSetter(value = "url", nulls = Nulls.SKIP)
        public _FinalStage url(Optional<String> url) {
            this.url = url;
            return this;
        }

        @Override
        public _FinalStage content(String content) {
            this.content = Optional.of(content);
            return this;
        }

        @Override
        @JsonSetter(value = "content", nulls = Nulls.SKIP)
        public _FinalStage content(Optional<String> content) {
            this.content = content;
            return this;
        }

        @Override
        public CloudMailinAttachment build() {
            return new CloudMailinAttachment(content, url, fileName, contentType, size, disposition, contentId);
        }
    }
}
